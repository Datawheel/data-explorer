{"version":3,"sources":["../node_modules/tsup/assets/cjs_shims.js","../../../node_modules/file-saver/FileSaver.js","../src/index.ts","../src/components/VizbuilderView.tsx","../../../node_modules/clsx/dist/clsx.m.js","../src/tooling/accesor.ts","../src/tooling/collection.ts","../src/tooling/constants.ts","../src/components/ChartCard.tsx","../../../node_modules/d3plus-export/es/index.js","../../../node_modules/d3plus-export/es/src/saveElement.js","../../../node_modules/html-to-image/src/index.ts","../../../node_modules/html-to-image/src/clone-node.ts","../../../node_modules/html-to-image/src/clone-pseudos.ts","../../../node_modules/html-to-image/src/util.ts","../../../node_modules/html-to-image/src/mimes.ts","../../../node_modules/html-to-image/src/dataurl.ts","../../../node_modules/html-to-image/src/embed-images.ts","../../../node_modules/html-to-image/src/embed-resources.ts","../../../node_modules/html-to-image/src/apply-style.ts","../../../node_modules/html-to-image/src/embed-webfonts.ts","../src/components/ErrorBoundary.tsx"],"names":["saveAs","useTranslation","Box","Title","React","useMemo","Button","Group","process","dataURL","cache","item","chart"],"mappings":"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","sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n","import {Translation} from \"@datawheel/vizbuilder\";\r\n\r\nexport {createVizbuilderView} from \"./components/VizbuilderView\";\r\n\r\ndeclare module \"@datawheel/tesseract-explorer\" {\r\n  interface TranslationDict {\r\n    vizbuilder: Translation;\r\n  }\r\n}\r\n","import {Level, Measure} from \"@datawheel/olap-client\";\r\nimport {ViewProps, useSettings, useTranslation} from \"@datawheel/tesseract-explorer\";\r\nimport {ChartLimits, ChartType, D3plusConfig, generateCharts} from \"@datawheel/vizbuilder\";\r\nimport {Box, Modal, SimpleGrid, Title} from \"@mantine/core\";\r\nimport cls from \"clsx\";\r\nimport React, {useCallback, useMemo} from \"react\";\r\nimport {measureConfigAccessor} from \"../tooling/accesor\";\r\nimport {mapActives} from \"../tooling/collection\";\r\nimport {DEFAULT_CHART_LIMITS} from \"../tooling/constants\";\r\nimport {ChartCard} from \"./ChartCard\";\r\n\r\n/**\r\n * Vizbuilder PanelView component factory function.\r\n */\r\nexport function createVizbuilderView(settings: {\r\n  readonly chartTypes?: ChartType[];\r\n  readonly chartLimits?: Partial<ChartLimits>;\r\n  readonly datacap?: number;\r\n  readonly defaultLocale?: string;\r\n  readonly downloadFormats?: string[];\r\n  readonly measureConfig?: Record<string, D3plusConfig> | ((measure: Measure) => D3plusConfig);\r\n  readonly nonIdealState?: React.ComponentType,\r\n  readonly showConfidenceInt?: boolean;\r\n  readonly topojsonConfig?: Record<string, D3plusConfig> | ((level: Level) => D3plusConfig);\r\n\r\n  /**\r\n   * A global d3plus config that gets applied on all charts.\r\n   * Has priority over the individually generated configs per chart,\r\n   * but can be overridden by internal working configurations.\r\n   */\r\n  readonly userConfig?: D3plusConfig;\r\n}) {\r\n  const {\r\n    chartTypes,\r\n    datacap,\r\n    defaultLocale = \"en\",\r\n    downloadFormats,\r\n    nonIdealState: Notice = NonIdealState,\r\n    showConfidenceInt = false,\r\n    topojsonConfig,\r\n    userConfig = {}\r\n  } = settings;\r\n\r\n  const getMeasureConfig = measureConfigAccessor(settings.measureConfig || {});\r\n  const chartLimits = {...DEFAULT_CHART_LIMITS, ...settings.chartLimits};\r\n  const chartGenOptions = {chartLimits, chartTypes, datacap, topojsonConfig};\r\n\r\n  VizbuilderView.defaultProps = {\r\n    version: process.env.BUILD_VERSION\r\n  };\r\n\r\n  return VizbuilderView;\r\n\r\n  /** Enclosed PanelView component. */\r\n  function VizbuilderView(props: ViewProps) {\r\n    const {cube, panelKey, params, result} = props;\r\n\r\n    const {actions, formatters} = useSettings();\r\n\r\n    const [panelName, currentChart] = useMemo(() => `${panelKey || \"\"}-`.split(\"-\"), [panelKey]);\r\n\r\n    const resetCurrentPanel = useCallback(() => {\r\n      actions.switchPanel(panelName);\r\n    }, [panelName]);\r\n\r\n    const charts = useMemo(() => generateCharts([{\r\n      cube,\r\n      dataset: result.data,\r\n      params: {\r\n        locale: params.locale || defaultLocale,\r\n        booleans: params.booleans,\r\n        cuts: mapActives(params.cuts, item => ({\r\n          dimension: item.dimension,\r\n          hierarchy: item.hierarchy,\r\n          level: item.level,\r\n          members: item.members\r\n        })),\r\n        drilldowns: mapActives(params.drilldowns, item => ({\r\n          caption: item.captionProperty,\r\n          dimension: item.dimension,\r\n          hierarchy: item.hierarchy,\r\n          level: item.level,\r\n          properties: item.properties.map(item => item.name)\r\n        })),\r\n        filters: mapActives(params.filters, item => ({\r\n          constraint1: [item.conditionOne[0], item.conditionOne[2]],\r\n          constraint2: item.conditionTwo\r\n            ? [item.conditionTwo[0], item.conditionTwo[2]]\r\n            : undefined,\r\n          formatter: formatters[item.measure],\r\n          joint: item.joint,\r\n          measure: item.measure\r\n        })),\r\n        measures: mapActives(params.measures, item => ({\r\n          formatter: formatters[item.name],\r\n          measure: item.name\r\n        }))\r\n\r\n      }\r\n    }], chartGenOptions), [cube, result.data, params]);\r\n\r\n    const content = useMemo(() => {\r\n      const isSingleChart = charts.length === 1;\r\n      const chartMap = new Map(charts.map(item => [item.key, item]));\r\n      const filteredCharts = [...chartMap.values()];\r\n\r\n      if (filteredCharts.length === 0) return <Notice />;\r\n\r\n      return (\r\n        <SimpleGrid\r\n          breakpoints={[\r\n            {minWidth: \"xs\", cols: Math.min(1, filteredCharts.length)},\r\n            {minWidth: \"md\", cols: Math.min(2, filteredCharts.length)},\r\n            {minWidth: \"lg\", cols: Math.min(3, filteredCharts.length)},\r\n            {minWidth: \"xl\", cols: Math.min(4, filteredCharts.length)}\r\n          ]}\r\n          className={cls({unique: filteredCharts.length === 1})}\r\n        >\r\n          {filteredCharts.map(chart =>\r\n            <ChartCard\r\n              chart={chart}\r\n              currentChart={\"\"}\r\n              downloadFormats={downloadFormats}\r\n              isSingleChart={isSingleChart}\r\n              key={chart.key}\r\n              measureConfig={getMeasureConfig}\r\n              onToggle={() => {\r\n                actions.switchPanel(`${panelName}-${chart.key}`);\r\n              }}\r\n              showConfidenceInt={showConfidenceInt}\r\n              userConfig={userConfig}\r\n            />\r\n          )}\r\n        </SimpleGrid>\r\n      );\r\n    }, [currentChart, charts]);\r\n\r\n    const focusContent = useMemo(() => {\r\n      const chart = charts.find(chart => currentChart && chart.key === currentChart);\r\n      if (!chart) return null;\r\n\r\n      return (\r\n        <ChartCard\r\n          chart={chart}\r\n          currentChart={currentChart}\r\n          downloadFormats={downloadFormats}\r\n          isSingleChart={true}\r\n          key={`${chart.key}-focus`}\r\n          measureConfig={getMeasureConfig}\r\n          onToggle={resetCurrentPanel}\r\n          showConfidenceInt={showConfidenceInt}\r\n          userConfig={userConfig}\r\n        />\r\n      );\r\n\r\n    }, [currentChart, charts]);\r\n\r\n    return (\r\n      <Box className={props.className} p=\"sm\">\r\n        {content}\r\n        <Modal\r\n          centered\r\n          onClose={resetCurrentPanel}\r\n          opened={currentChart !== \"\"}\r\n          padding={0}\r\n          size=\"calc(100vw - 3rem)\"\r\n          styles={{\r\n            content: {maxHeight: \"none !important\"},\r\n            inner: {padding: \"0 !important\"}\r\n          }}\r\n          withCloseButton={false}\r\n        >\r\n          {focusContent}\r\n        </Modal>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\n/** */\r\nfunction NonIdealState() {\r\n  const {translate: t} = useTranslation();\r\n\r\n  return <Box className=\"vizbuilder-nonidealstate\">\r\n    <Title order={1} className=\"vizbuilder-nonidealstate-header\">\r\n      {t(\"nonidealstate_msg\")}\r\n    </Title>\r\n  </Box>;\r\n}\r\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import {D3plusConfig} from \"@datawheel/vizbuilder\";\r\nimport {Measure} from \"@datawheel/olap-client\";\r\n\r\n/**\r\n * Normalizes the Vizbuilder Component Property \"measureConfig\", which can\r\n * accept both a `(measure: OlapClient.Measure) => D3plusConfig` or a\r\n * `Record<string, D3plusConfig>, into the function form for internal use.\r\n */\r\nexport function measureConfigAccessor(\r\n  config: Record<string, D3plusConfig> | ((item: Measure) => D3plusConfig)\r\n): (item: Measure) => D3plusConfig {\r\n  if (typeof config === \"function\") {\r\n    return config;\r\n  }\r\n  return item => config[item.name];\r\n}\r\n","type MaybeArray<T> = T | T[];\r\n\r\n/**\r\n * Ensures the returned value is always an array,\r\n * and discards `null` and `undefined` elements inside it.\r\n */\r\nexport function asArray<T>(value: MaybeArray<T | undefined | null>): T[] {\r\n  const target: (T | null | undefined)[] = [];\r\n  return target.concat(value).filter(item => item != null) as T[];\r\n}\r\n\r\n/**\r\n * Iterates over the values of a hashmap object, takes only the actives, and\r\n * returns an array with the transformation results.\r\n */\r\nexport function mapActives<T extends {active: boolean, key: string}, U>(\r\n  dict: Record<string, T>,\r\n  mapFn: (item: T, index: number, list: T[]) => U\r\n): U[] {\r\n  return Object.values(dict).filter(item => item.active).map(mapFn);\r\n}\r\n","export const DEFAULT_CHART_LIMITS = {\r\n  BARCHART_MAX_BARS: 20,\r\n  BARCHART_YEAR_MAX_BARS: 20,\r\n  DONUT_SHAPE_MAX: 30,\r\n  LINEPLOT_LINE_POINT_MIN: 2,\r\n  LINEPLOT_LINE_MAX: 20,\r\n  STACKED_SHAPE_MAX: 200,\r\n  STACKED_TIME_MEMBER_MIN: 2,\r\n  TREE_MAP_SHAPE_MAX: 1000\r\n};\r\n","import {Measure} from \"@datawheel/olap-client\";\r\nimport {useTranslation} from \"@datawheel/tesseract-explorer\";\r\nimport {Chart, ChartType, D3plusConfig, createChartConfig} from \"@datawheel/vizbuilder\";\r\nimport {Box, Button, Group, Paper, Stack} from \"@mantine/core\";\r\nimport {IconArrowsMaximize, IconArrowsMinimize, IconDownload, IconPhotoDown, IconVectorTriangle} from \"@tabler/icons-react\";\r\nimport {saveElement} from \"d3plus-export\";\r\nimport {BarChart, Donut, Geomap, LinePlot, Pie, StackedArea, Treemap} from \"d3plus-react\";\r\nimport React, {useMemo, useRef} from \"react\";\r\nimport {asArray} from \"../tooling/collection\";\r\nimport {ErrorBoundary} from \"./ErrorBoundary\";\r\n\r\nexport const chartComponents: Record<ChartType, React.ComponentType<{config: any}>> = {\r\n  barchart: BarChart,\r\n  barchartyear: BarChart,\r\n  donut: Donut,\r\n  geomap: Geomap,\r\n  histogram: BarChart,\r\n  lineplot: LinePlot,\r\n  pie: Pie,\r\n  stacked: StackedArea,\r\n  treemap: Treemap\r\n};\r\n\r\nconst iconByFormat = {\r\n  jpg: IconPhotoDown,\r\n  png: IconPhotoDown,\r\n  svg: IconVectorTriangle\r\n};\r\n\r\n/**  */\r\nexport function ChartCard(props: {\r\n  chart: Chart;\r\n  currentChart: string;\r\n  downloadFormats?: string[] | undefined;\r\n  isSingleChart: boolean;\r\n  measureConfig: (item: Measure) => D3plusConfig;\r\n  onToggle: () => void;\r\n  showConfidenceInt: boolean;\r\n  userConfig: D3plusConfig;\r\n}) {\r\n  const {chart, currentChart, isSingleChart} = props;\r\n  const isFocused = currentChart === chart.key;\r\n\r\n  const {translate, locale} = useTranslation();\r\n\r\n  const nodeRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const ChartComponent = chartComponents[chart.chartType];\r\n\r\n  const config = useMemo(() => createChartConfig(chart, {\r\n    currentChart,\r\n    isSingleChart,\r\n    isUniqueChart: isSingleChart,\r\n    measureConfig: props.measureConfig,\r\n    showConfidenceInt: Boolean(props.showConfidenceInt),\r\n    translate: (template, data) => translate(`vizbuilder.${template}`, data),\r\n    userConfig: props.userConfig || {}\r\n  }), [chart, isSingleChart, locale]);\r\n\r\n  const downloadButtons = useMemo(() => {\r\n    if (!isFocused && !isSingleChart) return [];\r\n\r\n    const filename = (config.title instanceof Function ? config.title() : config.title)\r\n      // and replace special characters with underscores\r\n      .replace(/[^\\w]/g, \"_\")\r\n      .replace(/[_]+/g, \"_\");\r\n\r\n    return asArray(props.downloadFormats).map(format => {\r\n      const formatLower = format.toLowerCase();\r\n      const Icon = iconByFormat[formatLower] || IconDownload;\r\n      return (\r\n        <Button\r\n          compact\r\n          key={format}\r\n          leftIcon={<Icon size={16} />}\r\n          onClick={() => {\r\n            const {current: boxElement} = nodeRef;\r\n            const svgElement = boxElement && boxElement.querySelector(\"svg\");\r\n            svgElement && saveElement(svgElement, {filename, type: formatLower}, {\r\n              background: getBackground(svgElement)\r\n            });\r\n          }}\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n        >\r\n          {format.toUpperCase()}\r\n        </Button>\r\n      );\r\n    });\r\n  }, [isFocused, isSingleChart, props.downloadFormats]);\r\n\r\n  const focusButton = useMemo(() => {\r\n    if (!isFocused && isSingleChart) return null;\r\n\r\n    const Icon = isFocused ? IconArrowsMinimize : IconArrowsMaximize;\r\n    return (\r\n      <Button\r\n        compact\r\n        leftIcon={<Icon size={16} />}\r\n        onClick={props.onToggle}\r\n        size=\"sm\"\r\n        variant={isFocused ? \"filled\" : \"light\"}\r\n      >\r\n        {isFocused\r\n          ? translate(\"vizbuilder.action_close\")\r\n          : translate(\"vizbuilder.action_enlarge\")}\r\n      </Button>\r\n    );\r\n  }, [isFocused, isSingleChart, locale, props.onToggle]);\r\n\r\n  const height = isFocused ? \"calc(100vh - 3rem)\" : isSingleChart ? \"75vh\" : 300;\r\n\r\n  return (\r\n    <Paper h={height} w=\"100%\" style={{overflow: \"hidden\"}}>\r\n      <ErrorBoundary>\r\n        <Stack spacing={0} h={height} style={{position: \"relative\"}} w=\"100%\">\r\n          <Group position=\"right\" p=\"xs\" spacing=\"xs\" align=\"center\">\r\n            {downloadButtons}\r\n            {focusButton}\r\n          </Group>\r\n          <Box style={{flex: \"1 1 auto\"}} ref={nodeRef} pb=\"xs\" px=\"xs\">\r\n            <ChartComponent config={config} />\r\n          </Box>\r\n        </Stack>\r\n      </ErrorBoundary>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst getBackground = node => {\r\n  if (node.nodeType !== Node.ELEMENT_NODE) return \"white\";\r\n  const styles = window.getComputedStyle(node);\r\n  const color = styles.getPropertyValue(\"background-color\");\r\n  return color && color !== \"rgba(0, 0, 0, 0)\" && color !== \"transparent\"\r\n    ? color\r\n    : getBackground(node.parentNode);\r\n};\r\n","export { default as saveElement } from \"./src/saveElement.js\";","import { toBlob, toSvg } from \"html-to-image\";\nimport { saveAs } from \"file-saver\";\nvar defaultOptions = {\n  filename: \"download\",\n  type: \"png\"\n};\n\n/**\n    @function saveElement\n    @desc Downloads an HTML Element as a bitmap PNG image.\n    @param {HTMLElement} elem A single element to be saved to one file.\n    @param {Object} [options] Additional options to specify.\n    @param {String} [options.filename = \"download\"] Filename for the downloaded file, without the extension.\n    @param {String} [options.type = \"png\"] File type of the saved document. Accepted values are `\"png\"` and `\"jpg\"`.\n    @param {Function} [options.callback] Function to be invoked after saving is complete.\n    @param {Object} [renderOptions] Custom options to be passed to the html-to-image function.\n*/\nexport default function (elem) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var renderOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!elem) return;\n  options = Object.assign({}, defaultOptions, options);\n\n  // rename renderOptions.background to backgroundColor for backwards compatibility\n  renderOptions = Object.assign({\n    backgroundColor: renderOptions.background\n  }, renderOptions);\n  function finish(blob) {\n    saveAs(blob, \"\".concat(options.filename, \".\").concat(options.type));\n    if (options.callback) options.callback();\n  }\n  if (options.type === \"svg\") {\n    toSvg(elem, renderOptions).then(function (dataUrl) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", dataUrl);\n      xhr.responseType = \"blob\";\n      xhr.onload = function () {\n        return finish(xhr.response);\n      };\n      xhr.send();\n    });\n  } else {\n    toBlob(elem, renderOptions).then(finish);\n  }\n}","import { Options } from './types'\nimport { cloneNode } from './clone-node'\nimport { embedImages } from './embed-images'\nimport { applyStyle } from './apply-style'\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts'\nimport {\n  getImageSize,\n  getPixelRatio,\n  createImage,\n  canvasToBlob,\n  nodeToDataURL,\n  checkCanvasDimensions,\n} from './util'\n\nexport async function toSvg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const { width, height } = getImageSize(node, options)\n  const clonedNode = (await cloneNode(node, options, true)) as HTMLElement\n  await embedWebFonts(clonedNode, options)\n  await embedImages(clonedNode, options)\n  applyStyle(clonedNode, options)\n  const datauri = await nodeToDataURL(clonedNode, width, height)\n  return datauri\n}\n\nexport async function toCanvas<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<HTMLCanvasElement> {\n  const { width, height } = getImageSize(node, options)\n  const svg = await toSvg(node, options)\n  const img = await createImage(svg)\n\n  const canvas = document.createElement('canvas')\n  const context = canvas.getContext('2d')!\n  const ratio = options.pixelRatio || getPixelRatio()\n  const canvasWidth = options.canvasWidth || width\n  const canvasHeight = options.canvasHeight || height\n\n  canvas.width = canvasWidth * ratio\n  canvas.height = canvasHeight * ratio\n\n  if (!options.skipAutoScale) {\n    checkCanvasDimensions(canvas)\n  }\n  canvas.style.width = `${canvasWidth}`\n  canvas.style.height = `${canvasHeight}`\n\n  if (options.backgroundColor) {\n    context.fillStyle = options.backgroundColor\n    context.fillRect(0, 0, canvas.width, canvas.height)\n  }\n\n  context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n  return canvas\n}\n\nexport async function toPixelData<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Uint8ClampedArray> {\n  const { width, height } = getImageSize(node, options)\n  const canvas = await toCanvas(node, options)\n  const ctx = canvas.getContext('2d')!\n  return ctx.getImageData(0, 0, width, height).data\n}\n\nexport async function toPng<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL()\n}\n\nexport async function toJpeg<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  const canvas = await toCanvas(node, options)\n  return canvas.toDataURL('image/jpeg', options.quality || 1)\n}\n\nexport async function toBlob<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<Blob | null> {\n  const canvas = await toCanvas(node, options)\n  const blob = await canvasToBlob(canvas)\n  return blob\n}\n\nexport async function getFontEmbedCSS<T extends HTMLElement>(\n  node: T,\n  options: Options = {},\n): Promise<string> {\n  return getWebFontCSS(node, options)\n}\n","import type { Options } from './types'\nimport { clonePseudoElements } from './clone-pseudos'\nimport { createImage, toArray, isInstanceOfElement } from './util'\nimport { getMimeType } from './mimes'\nimport { resourceToDataURL } from './dataurl'\n\nasync function cloneCanvasElement(canvas: HTMLCanvasElement) {\n  const dataURL = canvas.toDataURL()\n  if (dataURL === 'data:,') {\n    return canvas.cloneNode(false) as HTMLCanvasElement\n  }\n  return createImage(dataURL)\n}\n\nasync function cloneVideoElement(video: HTMLVideoElement, options: Options) {\n  if (video.currentSrc) {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    canvas.width = video.clientWidth\n    canvas.height = video.clientHeight\n    ctx?.drawImage(video, 0, 0, canvas.width, canvas.height)\n    const dataURL = canvas.toDataURL()\n    return createImage(dataURL)\n  }\n\n  const poster = video.poster\n  const contentType = getMimeType(poster)\n  const dataURL = await resourceToDataURL(poster, contentType, options)\n  return createImage(dataURL)\n}\n\nasync function cloneIFrameElement(iframe: HTMLIFrameElement) {\n  try {\n    if (iframe?.contentDocument?.body) {\n      return (await cloneNode(\n        iframe.contentDocument.body,\n        {},\n        true,\n      )) as HTMLBodyElement\n    }\n  } catch {\n    // Failed to clone iframe\n  }\n\n  return iframe.cloneNode(false) as HTMLIFrameElement\n}\n\nasync function cloneSingleNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<HTMLElement> {\n  if (isInstanceOfElement(node, HTMLCanvasElement)) {\n    return cloneCanvasElement(node)\n  }\n\n  if (isInstanceOfElement(node, HTMLVideoElement)) {\n    return cloneVideoElement(node, options)\n  }\n\n  if (isInstanceOfElement(node, HTMLIFrameElement)) {\n    return cloneIFrameElement(node)\n  }\n\n  return node.cloneNode(false) as T\n}\n\nconst isSlotElement = (node: HTMLElement): node is HTMLSlotElement =>\n  node.tagName != null && node.tagName.toUpperCase() === 'SLOT'\n\nasync function cloneChildren<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  options: Options,\n): Promise<T> {\n  let children: T[] = []\n\n  if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n    children = toArray<T>(nativeNode.assignedNodes())\n  } else if (\n    isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n    nativeNode.contentDocument?.body\n  ) {\n    children = toArray<T>(nativeNode.contentDocument.body.childNodes)\n  } else {\n    children = toArray<T>((nativeNode.shadowRoot ?? nativeNode).childNodes)\n  }\n\n  if (\n    children.length === 0 ||\n    isInstanceOfElement(nativeNode, HTMLVideoElement)\n  ) {\n    return clonedNode\n  }\n\n  await children.reduce(\n    (deferred, child) =>\n      deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild: HTMLElement | null) => {\n          if (clonedChild) {\n            clonedNode.appendChild(clonedChild)\n          }\n        }),\n    Promise.resolve(),\n  )\n\n  return clonedNode\n}\n\nfunction cloneCSSStyle<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  const targetStyle = clonedNode.style\n  if (!targetStyle) {\n    return\n  }\n\n  const sourceStyle = window.getComputedStyle(nativeNode)\n  if (sourceStyle.cssText) {\n    targetStyle.cssText = sourceStyle.cssText\n    targetStyle.transformOrigin = sourceStyle.transformOrigin\n  } else {\n    toArray<string>(sourceStyle).forEach((name) => {\n      let value = sourceStyle.getPropertyValue(name)\n      if (name === 'font-size' && value.endsWith('px')) {\n        const reducedFont =\n          Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1\n        value = `${reducedFont}px`\n      }\n\n      if (\n        isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        name === 'display' &&\n        value === 'inline'\n      ) {\n        value = 'block'\n      }\n      \n      if (name === 'd' && clonedNode.getAttribute('d')) {\n        value = `path(${clonedNode.getAttribute('d')})`\n      }\n      \n      targetStyle.setProperty(\n        name,\n        value,\n        sourceStyle.getPropertyPriority(name),\n      )\n    })\n  }\n}\n\nfunction cloneInputValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n    clonedNode.innerHTML = nativeNode.value\n  }\n\n  if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n    clonedNode.setAttribute('value', nativeNode.value)\n  }\n}\n\nfunction cloneSelectValue<T extends HTMLElement>(nativeNode: T, clonedNode: T) {\n  if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n    const clonedSelect = clonedNode as any as HTMLSelectElement\n    const selectedOption = Array.from(clonedSelect.children).find(\n      (child) => nativeNode.value === child.getAttribute('value'),\n    )\n\n    if (selectedOption) {\n      selectedOption.setAttribute('selected', '')\n    }\n  }\n}\n\nfunction decorate<T extends HTMLElement>(nativeNode: T, clonedNode: T): T {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    cloneCSSStyle(nativeNode, clonedNode)\n    clonePseudoElements(nativeNode, clonedNode)\n    cloneInputValue(nativeNode, clonedNode)\n    cloneSelectValue(nativeNode, clonedNode)\n  }\n\n  return clonedNode\n}\n\nasync function ensureSVGSymbols<T extends HTMLElement>(\n  clone: T,\n  options: Options,\n) {\n  const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : []\n  if (uses.length === 0) {\n    return clone\n  }\n\n  const processedDefs: { [key: string]: HTMLElement } = {}\n  for (let i = 0; i < uses.length; i++) {\n    const use = uses[i]\n    const id = use.getAttribute('xlink:href')\n    if (id) {\n      const exist = clone.querySelector(id)\n      const definition = document.querySelector(id) as HTMLElement\n      if (!exist && definition && !processedDefs[id]) {\n        // eslint-disable-next-line no-await-in-loop\n        processedDefs[id] = (await cloneNode(definition, options, true))!\n      }\n    }\n  }\n\n  const nodes = Object.values(processedDefs)\n  if (nodes.length) {\n    const ns = 'http://www.w3.org/1999/xhtml'\n    const svg = document.createElementNS(ns, 'svg')\n    svg.setAttribute('xmlns', ns)\n    svg.style.position = 'absolute'\n    svg.style.width = '0'\n    svg.style.height = '0'\n    svg.style.overflow = 'hidden'\n    svg.style.display = 'none'\n\n    const defs = document.createElementNS(ns, 'defs')\n    svg.appendChild(defs)\n\n    for (let i = 0; i < nodes.length; i++) {\n      defs.appendChild(nodes[i])\n    }\n\n    clone.appendChild(svg)\n  }\n\n  return clone\n}\n\nexport async function cloneNode<T extends HTMLElement>(\n  node: T,\n  options: Options,\n  isRoot?: boolean,\n): Promise<T | null> {\n  if (!isRoot && options.filter && !options.filter(node)) {\n    return null\n  }\n\n  return Promise.resolve(node)\n    .then((clonedNode) => cloneSingleNode(clonedNode, options) as Promise<T>)\n    .then((clonedNode) => cloneChildren(node, clonedNode, options))\n    .then((clonedNode) => decorate(node, clonedNode))\n    .then((clonedNode) => ensureSVGSymbols(clonedNode, options))\n}\n","import { uuid, toArray } from './util'\n\ntype Pseudo = ':before' | ':after'\n\nfunction formatCSSText(style: CSSStyleDeclaration) {\n  const content = style.getPropertyValue('content')\n  return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`\n}\n\nfunction formatCSSProperties(style: CSSStyleDeclaration) {\n  return toArray<string>(style)\n    .map((name) => {\n      const value = style.getPropertyValue(name)\n      const priority = style.getPropertyPriority(name)\n\n      return `${name}: ${value}${priority ? ' !important' : ''};`\n    })\n    .join(' ')\n}\n\nfunction getPseudoElementStyle(\n  className: string,\n  pseudo: Pseudo,\n  style: CSSStyleDeclaration,\n): Text {\n  const selector = `.${className}:${pseudo}`\n  const cssText = style.cssText\n    ? formatCSSText(style)\n    : formatCSSProperties(style)\n\n  return document.createTextNode(`${selector}{${cssText}}`)\n}\n\nfunction clonePseudoElement<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n  pseudo: Pseudo,\n) {\n  const style = window.getComputedStyle(nativeNode, pseudo)\n  const content = style.getPropertyValue('content')\n  if (content === '' || content === 'none') {\n    return\n  }\n\n  const className = uuid()\n  try {\n    clonedNode.className = `${clonedNode.className} ${className}`\n  } catch (err) {\n    return\n  }\n\n  const styleElement = document.createElement('style')\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style))\n  clonedNode.appendChild(styleElement)\n}\n\nexport function clonePseudoElements<T extends HTMLElement>(\n  nativeNode: T,\n  clonedNode: T,\n) {\n  clonePseudoElement(nativeNode, clonedNode, ':before')\n  clonePseudoElement(nativeNode, clonedNode, ':after')\n}\n","import type { Options } from './types'\n\nexport function resolveUrl(url: string, baseUrl: string | null): string {\n  // url is absolute already\n  if (url.match(/^[a-z]+:\\/\\//i)) {\n    return url\n  }\n\n  // url is absolute already, without protocol\n  if (url.match(/^\\/\\//)) {\n    return window.location.protocol + url\n  }\n\n  // dataURI, mailto:, tel:, etc.\n  if (url.match(/^[a-z]+:/i)) {\n    return url\n  }\n\n  const doc = document.implementation.createHTMLDocument()\n  const base = doc.createElement('base')\n  const a = doc.createElement('a')\n\n  doc.head.appendChild(base)\n  doc.body.appendChild(a)\n\n  if (baseUrl) {\n    base.href = baseUrl\n  }\n\n  a.href = url\n\n  return a.href\n}\n\nexport const uuid = (() => {\n  // generate uuid for className of pseudo elements.\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n  let counter = 0\n\n  // ref: http://stackoverflow.com/a/6248722/2519373\n  const random = () =>\n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4)\n\n  return () => {\n    counter += 1\n    return `u${random()}${counter}`\n  }\n})()\n\nexport function delay<T>(ms: number) {\n  return (args: T) =>\n    new Promise<T>((resolve) => {\n      setTimeout(() => resolve(args), ms)\n    })\n}\n\nexport function toArray<T>(arrayLike: any): T[] {\n  const arr: T[] = []\n\n  for (let i = 0, l = arrayLike.length; i < l; i++) {\n    arr.push(arrayLike[i])\n  }\n\n  return arr\n}\n\nfunction px(node: HTMLElement, styleProperty: string) {\n  const win = node.ownerDocument.defaultView || window\n  const val = win.getComputedStyle(node).getPropertyValue(styleProperty)\n  return val ? parseFloat(val.replace('px', '')) : 0\n}\n\nfunction getNodeWidth(node: HTMLElement) {\n  const leftBorder = px(node, 'border-left-width')\n  const rightBorder = px(node, 'border-right-width')\n  return node.clientWidth + leftBorder + rightBorder\n}\n\nfunction getNodeHeight(node: HTMLElement) {\n  const topBorder = px(node, 'border-top-width')\n  const bottomBorder = px(node, 'border-bottom-width')\n  return node.clientHeight + topBorder + bottomBorder\n}\n\nexport function getImageSize(targetNode: HTMLElement, options: Options = {}) {\n  const width = options.width || getNodeWidth(targetNode)\n  const height = options.height || getNodeHeight(targetNode)\n\n  return { width, height }\n}\n\nexport function getPixelRatio() {\n  let ratio\n\n  let FINAL_PROCESS\n  try {\n    FINAL_PROCESS = process\n  } catch (e) {\n    // pass\n  }\n\n  const val =\n    FINAL_PROCESS && FINAL_PROCESS.env\n      ? FINAL_PROCESS.env.devicePixelRatio\n      : null\n  if (val) {\n    ratio = parseInt(val, 10)\n    if (Number.isNaN(ratio)) {\n      ratio = 1\n    }\n  }\n  return ratio || window.devicePixelRatio || 1\n}\n\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384\n\nexport function checkCanvasDimensions(canvas: HTMLCanvasElement) {\n  if (\n    canvas.width > canvasDimensionLimit ||\n    canvas.height > canvasDimensionLimit\n  ) {\n    if (\n      canvas.width > canvasDimensionLimit &&\n      canvas.height > canvasDimensionLimit\n    ) {\n      if (canvas.width > canvas.height) {\n        canvas.height *= canvasDimensionLimit / canvas.width\n        canvas.width = canvasDimensionLimit\n      } else {\n        canvas.width *= canvasDimensionLimit / canvas.height\n        canvas.height = canvasDimensionLimit\n      }\n    } else if (canvas.width > canvasDimensionLimit) {\n      canvas.height *= canvasDimensionLimit / canvas.width\n      canvas.width = canvasDimensionLimit\n    } else {\n      canvas.width *= canvasDimensionLimit / canvas.height\n      canvas.height = canvasDimensionLimit\n    }\n  }\n}\n\nexport function canvasToBlob(\n  canvas: HTMLCanvasElement,\n  options: Options = {},\n): Promise<Blob | null> {\n  if (canvas.toBlob) {\n    return new Promise((resolve) => {\n      canvas.toBlob(\n        resolve,\n        options.type ? options.type : 'image/png',\n        options.quality ? options.quality : 1,\n      )\n    })\n  }\n\n  return new Promise((resolve) => {\n    const binaryString = window.atob(\n      canvas\n        .toDataURL(\n          options.type ? options.type : undefined,\n          options.quality ? options.quality : undefined,\n        )\n        .split(',')[1],\n    )\n    const len = binaryString.length\n    const binaryArray = new Uint8Array(len)\n\n    for (let i = 0; i < len; i += 1) {\n      binaryArray[i] = binaryString.charCodeAt(i)\n    }\n\n    resolve(\n      new Blob([binaryArray], {\n        type: options.type ? options.type : 'image/png',\n      }),\n    )\n  })\n}\n\nexport function createImage(url: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image()\n    img.decode = () => resolve(img) as any\n    img.onload = () => resolve(img)\n    img.onerror = reject\n    img.crossOrigin = 'anonymous'\n    img.decoding = 'async'\n    img.src = url\n  })\n}\n\nexport async function svgToDataURL(svg: SVGElement): Promise<string> {\n  return Promise.resolve()\n    .then(() => new XMLSerializer().serializeToString(svg))\n    .then(encodeURIComponent)\n    .then((html) => `data:image/svg+xml;charset=utf-8,${html}`)\n}\n\nexport async function nodeToDataURL(\n  node: HTMLElement,\n  width: number,\n  height: number,\n): Promise<string> {\n  const xmlns = 'http://www.w3.org/2000/svg'\n  const svg = document.createElementNS(xmlns, 'svg')\n  const foreignObject = document.createElementNS(xmlns, 'foreignObject')\n\n  svg.setAttribute('width', `${width}`)\n  svg.setAttribute('height', `${height}`)\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n\n  foreignObject.setAttribute('width', '100%')\n  foreignObject.setAttribute('height', '100%')\n  foreignObject.setAttribute('x', '0')\n  foreignObject.setAttribute('y', '0')\n  foreignObject.setAttribute('externalResourcesRequired', 'true')\n\n  svg.appendChild(foreignObject)\n  foreignObject.appendChild(node)\n  return svgToDataURL(svg)\n}\n\nexport const isInstanceOfElement = <\n  T extends typeof Element | typeof HTMLElement | typeof SVGImageElement,\n>(\n  node: Element | HTMLElement | SVGImageElement,\n  instance: T,\n): node is T['prototype'] => {\n  if (node instanceof instance) return true\n\n  const nodePrototype = Object.getPrototypeOf(node)\n\n  if (nodePrototype === null) return false\n\n  return (\n    nodePrototype.constructor.name === instance.name ||\n    isInstanceOfElement(nodePrototype, instance)\n  )\n}\n","const WOFF = 'application/font-woff'\nconst JPEG = 'image/jpeg'\nconst mimes: { [key: string]: string } = {\n  woff: WOFF,\n  woff2: WOFF,\n  ttf: 'application/font-truetype',\n  eot: 'application/vnd.ms-fontobject',\n  png: 'image/png',\n  jpg: JPEG,\n  jpeg: JPEG,\n  gif: 'image/gif',\n  tiff: 'image/tiff',\n  svg: 'image/svg+xml',\n  webp: 'image/webp',\n}\n\nfunction getExtension(url: string): string {\n  const match = /\\.([^./]*?)$/g.exec(url)\n  return match ? match[1] : ''\n}\n\nexport function getMimeType(url: string): string {\n  const extension = getExtension(url).toLowerCase()\n  return mimes[extension] || ''\n}\n","import { Options } from './types'\n\nfunction getContentFromDataUrl(dataURL: string) {\n  return dataURL.split(/,/)[1]\n}\n\nexport function isDataUrl(url: string) {\n  return url.search(/^(data:)/) !== -1\n}\n\nexport function makeDataUrl(content: string, mimeType: string) {\n  return `data:${mimeType};base64,${content}`\n}\n\nexport async function fetchAsDataURL<T>(\n  url: string,\n  init: RequestInit | undefined,\n  process: (data: { result: string; res: Response }) => T,\n): Promise<T> {\n  const res = await fetch(url, init)\n  if (res.status === 404) {\n    throw new Error(`Resource \"${res.url}\" not found`)\n  }\n  const blob = await res.blob()\n  return new Promise<T>((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onerror = reject\n    reader.onloadend = () => {\n      try {\n        resolve(process({ res, result: reader.result as string }))\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    reader.readAsDataURL(blob)\n  })\n}\n\nconst cache: { [url: string]: string } = {}\n\nfunction getCacheKey(\n  url: string,\n  contentType: string | undefined,\n  includeQueryParams: boolean | undefined,\n) {\n  let key = url.replace(/\\?.*/, '')\n\n  if (includeQueryParams) {\n    key = url\n  }\n\n  // font resource\n  if (/ttf|otf|eot|woff2?/i.test(key)) {\n    key = key.replace(/.*\\//, '')\n  }\n\n  return contentType ? `[${contentType}]${key}` : key\n}\n\nexport async function resourceToDataURL(\n  resourceUrl: string,\n  contentType: string | undefined,\n  options: Options,\n) {\n  const cacheKey = getCacheKey(\n    resourceUrl,\n    contentType,\n    options.includeQueryParams,\n  )\n\n  if (cache[cacheKey] != null) {\n    return cache[cacheKey]\n  }\n\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n  if (options.cacheBust) {\n    // eslint-disable-next-line no-param-reassign\n    resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime()\n  }\n\n  let dataURL: string\n  try {\n    const content = await fetchAsDataURL(\n      resourceUrl,\n      options.fetchRequestInit,\n      ({ res, result }) => {\n        if (!contentType) {\n          // eslint-disable-next-line no-param-reassign\n          contentType = res.headers.get('Content-Type') || ''\n        }\n        return getContentFromDataUrl(result)\n      },\n    )\n    dataURL = makeDataUrl(content, contentType!)\n  } catch (error) {\n    dataURL = options.imagePlaceholder || ''\n\n    let msg = `Failed to fetch resource: ${resourceUrl}`\n    if (error) {\n      msg = typeof error === 'string' ? error : error.message\n    }\n\n    if (msg) {\n      console.warn(msg)\n    }\n  }\n\n  cache[cacheKey] = dataURL\n  return dataURL\n}\n","import { Options } from './types'\nimport { embedResources } from './embed-resources'\nimport { toArray, isInstanceOfElement } from './util'\nimport { isDataUrl, resourceToDataURL } from './dataurl'\nimport { getMimeType } from './mimes'\n\nasync function embedProp(\n  propName: string,\n  node: HTMLElement,\n  options: Options,\n) {\n  const propValue = node.style?.getPropertyValue(propName)\n  if (propValue) {\n    const cssString = await embedResources(propValue, null, options)\n    node.style.setProperty(\n      propName,\n      cssString,\n      node.style.getPropertyPriority(propName),\n    )\n    return true\n  }\n  return false\n}\n\nasync function embedBackground<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (!(await embedProp('background', clonedNode, options))) {\n    await embedProp('background-image', clonedNode, options)\n  }\n  if (!(await embedProp('mask', clonedNode, options))) {\n    await embedProp('mask-image', clonedNode, options)\n  }\n}\n\nasync function embedImageNode<T extends HTMLElement | SVGImageElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement)\n\n  if (\n    !(isImageElement && !isDataUrl(clonedNode.src)) &&\n    !(\n      isInstanceOfElement(clonedNode, SVGImageElement) &&\n      !isDataUrl(clonedNode.href.baseVal)\n    )\n  ) {\n    return\n  }\n\n  const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal\n\n  const dataURL = await resourceToDataURL(url, getMimeType(url), options)\n  await new Promise((resolve, reject) => {\n    clonedNode.onload = resolve\n    clonedNode.onerror = reject\n\n    const image = clonedNode as HTMLImageElement\n    if (image.decode) {\n      image.decode = resolve as any\n    }\n\n    if (image.loading === 'lazy') {\n      image.loading = 'eager'\n    }\n\n    if (isImageElement) {\n      clonedNode.srcset = ''\n      clonedNode.src = dataURL\n    } else {\n      clonedNode.href.baseVal = dataURL\n    }\n  })\n}\n\nasync function embedChildren<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const children = toArray<HTMLElement>(clonedNode.childNodes)\n  const deferreds = children.map((child) => embedImages(child, options))\n  await Promise.all(deferreds).then(() => clonedNode)\n}\n\nexport async function embedImages<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  if (isInstanceOfElement(clonedNode, Element)) {\n    await embedBackground(clonedNode, options)\n    await embedImageNode(clonedNode, options)\n    await embedChildren(clonedNode, options)\n  }\n}\n","import { Options } from './types'\nimport { resolveUrl } from './util'\nimport { getMimeType } from './mimes'\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl'\n\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g\n\nfunction toRegex(url: string): RegExp {\n  // eslint-disable-next-line no-useless-escape\n  const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n  return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g')\n}\n\nexport function parseURLs(cssText: string): string[] {\n  const urls: string[] = []\n\n  cssText.replace(URL_REGEX, (raw, quotation, url) => {\n    urls.push(url)\n    return raw\n  })\n\n  return urls.filter((url) => !isDataUrl(url))\n}\n\nexport async function embed(\n  cssText: string,\n  resourceURL: string,\n  baseURL: string | null,\n  options: Options,\n  getContentFromUrl?: (url: string) => Promise<string>,\n): Promise<string> {\n  try {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL\n    const contentType = getMimeType(resourceURL)\n    let dataURL: string\n    if (getContentFromUrl) {\n      const content = await getContentFromUrl(resolvedURL)\n      dataURL = makeDataUrl(content, contentType)\n    } else {\n      dataURL = await resourceToDataURL(resolvedURL, contentType, options)\n    }\n    return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`)\n  } catch (error) {\n    // pass\n  }\n  return cssText\n}\n\nfunction filterPreferredFontFormat(\n  str: string,\n  { preferredFontFormat }: Options,\n): string {\n  return !preferredFontFormat\n    ? str\n    : str.replace(FONT_SRC_REGEX, (match: string) => {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || []\n          if (!format) {\n            return ''\n          }\n\n          if (format === preferredFontFormat) {\n            return `src: ${src};`\n          }\n        }\n      })\n}\n\nexport function shouldEmbed(url: string): boolean {\n  return url.search(URL_REGEX) !== -1\n}\n\nexport async function embedResources(\n  cssText: string,\n  baseUrl: string | null,\n  options: Options,\n): Promise<string> {\n  if (!shouldEmbed(cssText)) {\n    return cssText\n  }\n\n  const filteredCSSText = filterPreferredFontFormat(cssText, options)\n  const urls = parseURLs(filteredCSSText)\n  return urls.reduce(\n    (deferred, url) =>\n      deferred.then((css) => embed(css, url, baseUrl, options)),\n    Promise.resolve(filteredCSSText),\n  )\n}\n","import { Options } from './types'\n\nexport function applyStyle<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): T {\n  const { style } = node\n\n  if (options.backgroundColor) {\n    style.backgroundColor = options.backgroundColor\n  }\n\n  if (options.width) {\n    style.width = `${options.width}px`\n  }\n\n  if (options.height) {\n    style.height = `${options.height}px`\n  }\n\n  const manual = options.style\n  if (manual != null) {\n    Object.keys(manual).forEach((key: any) => {\n      style[key] = manual[key] as string\n    })\n  }\n\n  return node\n}\n","import type { Options } from './types'\nimport { toArray } from './util'\nimport { fetchAsDataURL } from './dataurl'\nimport { shouldEmbed, embedResources } from './embed-resources'\n\ninterface Metadata {\n  url: string\n  cssText: string\n}\n\nconst cssFetchCache: { [href: string]: Metadata } = {}\n\nasync function fetchCSS(url: string) {\n  let cache = cssFetchCache[url]\n  if (cache != null) {\n    return cache\n  }\n\n  const res = await fetch(url)\n  const cssText = await res.text()\n  cache = { url, cssText }\n\n  cssFetchCache[url] = cache\n\n  return cache\n}\n\nasync function embedFonts(data: Metadata, options: Options): Promise<string> {\n  let cssText = data.cssText\n  const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g\n  const fontLocs = cssText.match(/url\\([^)]+\\)/g) || []\n  const loadFonts = fontLocs.map(async (loc: string) => {\n    let url = loc.replace(regexUrl, '$1')\n    if (!url.startsWith('https://')) {\n      url = new URL(url, data.url).href\n    }\n\n    return fetchAsDataURL<[string, string]>(\n      url,\n      options.fetchRequestInit,\n      ({ result }) => {\n        cssText = cssText.replace(loc, `url(${result})`)\n        return [loc, result]\n      },\n    )\n  })\n\n  return Promise.all(loadFonts).then(() => cssText)\n}\n\nfunction parseCSS(source: string) {\n  if (source == null) {\n    return []\n  }\n\n  const result: string[] = []\n  const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi\n  // strip out comments\n  let cssText = source.replace(commentsRegex, '')\n\n  // eslint-disable-next-line prefer-regex-literals\n  const keyframesRegex = new RegExp(\n    '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})',\n    'gi',\n  )\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const matches = keyframesRegex.exec(cssText)\n    if (matches === null) {\n      break\n    }\n    result.push(matches[0])\n  }\n  cssText = cssText.replace(keyframesRegex, '')\n\n  const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi\n  // to match css & media queries together\n  const combinedCSSRegex =\n    '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n    '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'\n  // unified regex\n  const unifiedRegex = new RegExp(combinedCSSRegex, 'gi')\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let matches = importRegex.exec(cssText)\n    if (matches === null) {\n      matches = unifiedRegex.exec(cssText)\n      if (matches === null) {\n        break\n      } else {\n        importRegex.lastIndex = unifiedRegex.lastIndex\n      }\n    } else {\n      unifiedRegex.lastIndex = importRegex.lastIndex\n    }\n    result.push(matches[0])\n  }\n\n  return result\n}\n\nasync function getCSSRules(\n  styleSheets: CSSStyleSheet[],\n  options: Options,\n): Promise<CSSStyleRule[]> {\n  const ret: CSSStyleRule[] = []\n  const deferreds: Promise<number | void>[] = []\n\n  // First loop inlines imports\n  styleSheets.forEach((sheet) => {\n    if ('cssRules' in sheet) {\n      try {\n        toArray<CSSRule>(sheet.cssRules || []).forEach((item, index) => {\n          if (item.type === CSSRule.IMPORT_RULE) {\n            let importIndex = index + 1\n            const url = (item as CSSImportRule).href\n            const deferred = fetchCSS(url)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  try {\n                    sheet.insertRule(\n                      rule,\n                      rule.startsWith('@import')\n                        ? (importIndex += 1)\n                        : sheet.cssRules.length,\n                    )\n                  } catch (error) {\n                    console.error('Error inserting rule from remote css', {\n                      rule,\n                      error,\n                    })\n                  }\n                }),\n              )\n              .catch((e) => {\n                console.error('Error loading remote css', e.toString())\n              })\n\n            deferreds.push(deferred)\n          }\n        })\n      } catch (e) {\n        const inline =\n          styleSheets.find((a) => a.href == null) || document.styleSheets[0]\n        if (sheet.href != null) {\n          deferreds.push(\n            fetchCSS(sheet.href)\n              .then((metadata) => embedFonts(metadata, options))\n              .then((cssText) =>\n                parseCSS(cssText).forEach((rule) => {\n                  inline.insertRule(rule, sheet.cssRules.length)\n                }),\n              )\n              .catch((err: unknown) => {\n                console.error('Error loading remote stylesheet', err)\n              }),\n          )\n        }\n        console.error('Error inlining remote css file', e)\n      }\n    }\n  })\n\n  return Promise.all(deferreds).then(() => {\n    // Second loop parses rules\n    styleSheets.forEach((sheet) => {\n      if ('cssRules' in sheet) {\n        try {\n          toArray<CSSStyleRule>(sheet.cssRules || []).forEach((item) => {\n            ret.push(item)\n          })\n        } catch (e) {\n          console.error(`Error while reading CSS rules from ${sheet.href}`, e)\n        }\n      }\n    })\n\n    return ret\n  })\n}\n\nfunction getWebFontRules(cssRules: CSSStyleRule[]): CSSStyleRule[] {\n  return cssRules\n    .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n    .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')))\n}\n\nasync function parseWebFontRules<T extends HTMLElement>(\n  node: T,\n  options: Options,\n) {\n  if (node.ownerDocument == null) {\n    throw new Error('Provided element is not within a Document')\n  }\n\n  const styleSheets = toArray<CSSStyleSheet>(node.ownerDocument.styleSheets)\n  const cssRules = await getCSSRules(styleSheets, options)\n\n  return getWebFontRules(cssRules)\n}\n\nexport async function getWebFontCSS<T extends HTMLElement>(\n  node: T,\n  options: Options,\n): Promise<string> {\n  const rules = await parseWebFontRules(node, options)\n  const cssTexts = await Promise.all(\n    rules.map((rule) => {\n      const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null\n      return embedResources(rule.cssText, baseUrl, options)\n    }),\n  )\n\n  return cssTexts.join('\\n')\n}\n\nexport async function embedWebFonts<T extends HTMLElement>(\n  clonedNode: T,\n  options: Options,\n) {\n  const cssText =\n    options.fontEmbedCSS != null\n      ? options.fontEmbedCSS\n      : options.skipFonts\n      ? null\n      : await getWebFontCSS(clonedNode, options)\n\n  if (cssText) {\n    const styleNode = document.createElement('style')\n    const sytleContent = document.createTextNode(cssText)\n\n    styleNode.appendChild(sytleContent)\n\n    if (clonedNode.firstChild) {\n      clonedNode.insertBefore(styleNode, clonedNode.firstChild)\n    } else {\n      clonedNode.appendChild(styleNode)\n    }\n  }\n}\n","import {TranslationConsumer} from \"@datawheel/tesseract-explorer\";\r\nimport {Button, Flex, Group, Text, Title} from \"@mantine/core\";\r\nimport React from \"react\";\r\n\r\ninterface State {\r\n  message: string;\r\n  name: string;\r\n}\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<Props, State> {\r\n  static getDerivedStateFromError(error) {\r\n    return {message: error.message, name: error.name};\r\n  }\r\n\r\n  state = {\r\n    message: \"\",\r\n    name: \"\"\r\n  };\r\n\r\n  clearError = () => this.setState({message: \"\", name: \"\"});\r\n\r\n  render() {\r\n    const {message, name} = this.state;\r\n\r\n    if (!message) {\r\n      return this.props.children;\r\n    }\r\n\r\n    return (\r\n      <TranslationConsumer>\r\n        {({translate: t}) => {\r\n\r\n          const detailText = t(\"error.detail\");\r\n\r\n          return (\r\n            <Flex p=\"xl\" align=\"center\" justify=\"center\" direction=\"column\" className=\"chart-card error\">\r\n              <Title order={3}>{t(\"error.title\")}</Title>\r\n              {detailText.length ? <Text>{detailText}</Text> : null}\r\n              <Text>{t(\"error.message\", {message})}</Text>\r\n              <Group spacing=\"xs\" my=\"sm\">\r\n                <Button\r\n                  onClick={this.clearError}\r\n                  size=\"xs\"\r\n                  variant=\"light\"\r\n                >\r\n                  {t(\"action_retry\")}\r\n                </Button>\r\n                <Button error={name} message={message} />\r\n              </Group>\r\n            </Flex>\r\n          );\r\n        }}\r\n      </TranslationConsumer>\r\n    );\r\n  }\r\n}\r\n"]}